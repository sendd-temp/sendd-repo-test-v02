/*
Converts a single asset into another asset

This is a "clean" conversion i.e. does not involve markups, fees, etc.
Uses the "official market" rate where it could be argued that there was no profit or loss generated by doing the conversion.

*/



// ---------------
// Grab these from the function/API call parameters
// --!!! replace with provided parameters

// Example values for testing:
const requestedBaseAsset = 'USDT';
const requestedBaseAssetId = 8;
const requestedConvertedAsset = 'USD';
const requestedConvertedAssetId = 9;
const requestedBaseAssetAmountFullunits = 59.4;
const conversionAccountFrom = '0b2de8e2-c40e-483b-8b9d-e5407c4b6d6a';
const conversionAccountTo = '0b2de8e2-c40e-483b-8b9d-e5407c4b6d6a';




// -------------------
// Fetch the official market rate


// -----
// Fetch API used to process the API call response
import fetch from 'node-fetch';


// -----
// Configuration (variables/options) for CurrencyFreaks

const apiKey = '4f4794202d4444d3ae58af35677ac8e3';
const baseCurrency = requestedBaseAsset;
const assetsList = requestedConvertedAsset; // You can have multiple currencies, separated by comma , eg 'USD,EUR'
const url = `https://api.currencyfreaks.com/v2.0/rates/latest?apikey=${apiKey}&symbols=${assetsList}&base=${baseCurrency}`;
const options = {
  method: 'GET',
  headers: {'Content-Type': 'application/json', Accept: 'application/json'}
};
const rateProvider = 'CurrencyFreaks';


/*
// -----
// Configuration (variables/options) for CurrencyBeacon
// replace with provided parameters instead of hard-coded values
const apiKey = '5cYktImFUptJGE6clByiKLiPNCzaBLV0';
const baseCurrency = 'USDT';
const assetsList = 'GBP,EUR'; // You can have multiple currencies, separated by comma , eg 'USD,EUR'
const url = `https://api.currencybeacon.com/v1/latest?api_key=${apiKey}&symbols=${assetsList}&base=${baseCurrency}`;

const options = {
    method: 'GET',
    headers: {'Content-Type': 'application/json', Accept: 'application/json'}
  };
const rateProvider = 'CurrencyBeacon';
*/


// -----
// Execute the API call for the selected FX providers (e.g. CurrencyFreaks)

const getRate = async () => {
    const response = await fetch(url, options);
    //console.log(response);
    return await response.json();
  };

var rateResponse;
export default rateResponse = await getRate();
// It arrives without the outer [ ] brackets so we add those
const rateResponseString = '['+JSON.stringify(rateResponse)+']';
const rateResponseArray = JSON.parse(rateResponseString);

//console.log(rateResponse);





// ---------------------
// Save the rate data as .txt


//  Catch the timestamp
// In ISO format
const timestamp_filecreation = new Date(new Date().toISOString());
// Format further for creating filenames etc
const timestampFormatted_filecreation = timestamp_filecreation.getFullYear() + '-' + (timestamp_filecreation.getMonth()+1) + '-' + timestamp_filecreation.getDate() + '_' + timestamp_filecreation.getHours() + '-' + timestamp_filecreation.getMinutes() + '-' + timestamp_filecreation.getSeconds();


// Import library for writing data into a file
import fs from 'node:fs';
const content = JSON.stringify(rateResponse);
// Create filename for archiving the balances
const filename = '../generated-files/conversion-rates_' + rateProvider + '_' + timestampFormatted_filecreation + '.txt';
// Create the txt file
fs.writeFile(filename, content, err => {
  if (err) {
    console.error(err);
  } else {
    // file written successfully
  }
});


// ----------------
// Grab the exchange rate for the asset that needs to be converted
const baseAsset = rateResponseArray[0].base;
const convertedAsset = rateResponseArray[0].rates;
const conversionRate = rateResponseArray[0].rates[requestedConvertedAsset];


// Troubleshooting:
//console.log(rateResponseArray[0]);
//console.log(rateResponseArray[0].rates);
console.log('Requested Base Asset: ' + requestedBaseAsset + ' -> Requested Output/Converted Asset: ' + requestedConvertedAsset);
console.log('From currency API: Base Asset: ' + baseAsset + ' -> Converted Asset: ' +  convertedAsset + ' @ Base_Converted_Rate: ' + conversionRate);
console.log('From currency API: Base Asset: ' + baseAsset + ' -> Converted Asset: ' +  requestedConvertedAsset + ' @ Base_Converted_Rate: ' + conversionRate);


// ----------------
// Convert the amount
const convertedAmountFullunits = requestedBaseAssetAmountFullunits * conversionRate;
console.log('Converted amount: '); 
console.log(convertedAmountFullunits);


// ----------------
// Create a transaction for this conversion
// (usually 'from' and 'to' the same Asset COnversion Account)


// Grab the timestamp
const timestamp_transaction = new Date(new Date().toISOString());

// Need to include this module as it contains the database query function
import { queryDatabase } from '../db-query.js';

const queryText = 'INSERT INTO transactions (account_from, account_to, asset_id_from, amount_fullunits_from, asset_id_to, amount_fullunits_to, transaction_description, transaction_type_id, transaction_created_at) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)'; // Query (with parameters)
const queryParams = [conversionAccountFrom, conversionAccountTo, requestedBaseAssetId, requestedBaseAssetAmountFullunits, requestedConvertedAssetId, convertedAmountFullunits, 'Conversion from USDT to USD', 2, timestamp_transaction ]; // Parameters/values for the query
// Execute the query (using a function called 'queryDatabase' in module 'db-query.js')
// and save the result into variable
const queryResult = queryDatabase(queryText, queryParams);


